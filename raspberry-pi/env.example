# üçì Configuration pour d√©ploiement Raspberry Pi (PRODUCTION)
# Copiez ce fichier vers .env √† la racine du projet sur le Raspberry Pi

# === GitHub Container Registry ===
# ‚ö†Ô∏è OBLIGATOIRE : Votre username GitHub
GITHUB_REPOSITORY_OWNER=your-github-username

# Tag des images √† utiliser (latest, v1.0.0, develop, etc.)
IMAGE_TAG=latest

# Token GitHub pour images priv√©es (optionnel si repo public)
# Cr√©er sur: GitHub ‚Üí Settings ‚Üí Developer settings ‚Üí Personal access tokens
# Permission requise: read:packages
GITHUB_TOKEN=

# === Base de donn√©es ===
DB_PASSWORD=eLibrary@2025!SecurePassword

# === Redis ===
REDIS_CONNECTION_STRING=redis:6379

# === RabbitMQ ===
RABBITMQ_HOST=rabbitmq
RABBITMQ_USER=guest
RABBITMQ_PASS=guest

# === JWT Settings ===
JWT_SECRET=SuperSecretKeyForJWTProductionRaspberryPi2025!
JWT_ISSUER=eLibrary-API
JWT_AUDIENCE=eLibrary-Clients
JWT_EXPIRATION_MINUTES=60

# === Grafana ===
GRAFANA_PASSWORD=admin123

# === API URLs (utilisez l'IP de votre Raspberry Pi) ===
API_GATEWAY_URL=http://192.168.1.100:5000
REACT_APP_API_URL=http://192.168.1.100:5000
ANGULAR_API_URL=http://192.168.1.100:5000

# === Google Books API (optionnel) ===
GOOGLE_BOOKS_API_KEY=YOUR_API_KEY_HERE

# === Feature Flags ===
ENABLE_RECOMMENDATIONS=true
ENABLE_REAL_TIME_NOTIFICATIONS=true
ENABLE_GOOGLE_BOOKS_ENRICHMENT=true
ENABLE_ADVANCED_ANALYTICS=false

# === Watchtower Notifications (optionnel) ===
# Slack: slack://TOKEN@CHANNEL
# Discord: discord://TOKEN@CHANNEL
# Email: smtp://username:password@host:port/?from=FROM&to=TO
WATCHTOWER_NOTIFICATION_URL=

